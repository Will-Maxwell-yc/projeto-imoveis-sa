{"ast":null,"code":"var _jsxFileName = \"/home/willmaxwell/Codigos/projeto-imoveis-sa/interface/src/Pages/Clientes/Clientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clientes = () => {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [erro, setErro] = useState(null);\n  useEffect(() => {\n    obterClientes(); // Chamada da função ao montar o componente\n  }, []); // Passando um array vazio como segundo argumento para garantir que a função só seja chamada uma vez\n\n  async function obterClientes() {\n    try {\n      const response = await fetch('http://localhost:3001/clientes');\n      if (!response.ok) {\n        throw new Error('Erro ao obter clientes');\n      }\n      const data = await response.json();\n      console.log(data); // Exibe a resposta no console do navegador\n      setClientes(data); // Define os clientes recebidos do backend no estado\n    } catch (error) {\n      console.error('Erro ao obter clientes:', error);\n      setErro('Erro ao obter clientes. Por favor, tente novamente mais tarde.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nome: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), cliente.nome, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), cliente.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"CPF: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), cliente.cpf, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 48\n        }, this)]\n      }, cliente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Clientes, \"rWKmEDx2wUhZ01Q2qh2AayMagCY=\");\n_c = Clientes;\nexport default Clientes;\nvar _c;\n$RefreshReg$(_c, \"Clientes\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clientes","_s","clientes","setClientes","erro","setErro","obterClientes","response","fetch","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cliente","nome","email","cpf","id","_c","$RefreshReg$"],"sources":["/home/willmaxwell/Codigos/projeto-imoveis-sa/interface/src/Pages/Clientes/Clientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Clientes = () => {\n  const [clientes, setClientes] = useState([]);\n  const [erro, setErro] = useState(null);\n\n  useEffect(() => {\n    obterClientes(); // Chamada da função ao montar o componente\n  }, []); // Passando um array vazio como segundo argumento para garantir que a função só seja chamada uma vez\n\n  async function obterClientes() {\n    try {\n      const response = await fetch('http://localhost:3001/clientes');\n      if (!response.ok) {\n        throw new Error('Erro ao obter clientes');\n      }\n      const data = await response.json();\n      console.log(data); // Exibe a resposta no console do navegador\n      setClientes(data); // Define os clientes recebidos do backend no estado\n    } catch (error) {\n      console.error('Erro ao obter clientes:', error);\n      setErro('Erro ao obter clientes. Por favor, tente novamente mais tarde.');\n    }\n  }\n\n  return (\n    <div>\n      <h1>Clientes</h1>\n      {erro && <p>{erro}</p>}\n      <ul>\n        {clientes.map(cliente => (\n          <li key={cliente.id}>\n            <strong>Nome: </strong>{cliente.nome}<br />\n            <strong>Email: </strong>{cliente.email}<br />\n            <strong>CPF: </strong>{cliente.cpf}<br />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Clientes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,eAAeA,aAAaA,CAAA,EAAG;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;MACnBR,WAAW,CAACQ,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CV,OAAO,CAAC,gEAAgE,CAAC;IAC3E;EACF;EAEA,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBhB,IAAI,iBAAIL,OAAA;MAAAiB,QAAA,EAAIZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAAiB,QAAA,EACGd,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACnBvB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACE,OAAO,CAACC,IAAI,eAACxB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3CrB,OAAA;UAAAiB,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACE,OAAO,CAACE,KAAK,eAACzB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7CrB,OAAA;UAAAiB,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACE,OAAO,CAACG,GAAG,eAAC1B,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHlCE,OAAO,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAtCKD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}